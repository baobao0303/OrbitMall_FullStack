{"version":3,"file":"application-helpers.mjs","sources":["../../../../projects/application/helpers/src/lib/date-time.helper.ts","../../../../projects/application/helpers/src/public-api.ts","../../../../projects/application/helpers/src/application-helpers.ts"],"sourcesContent":["import moment from 'moment';\nexport class DateTimeHelper {\n  /**\n   * Formats the given date with the specified format.\n   *\n   * @param date - The Moment object or valid date to be formatted.\n   * @param format - The format string (e.g., 'YYYY-MM-DD').\n   * @returns The formatted date as a string.\n   */\n  public static formatToDate(date: any): any {\n    return new Date(moment(date).utc().toDate()).toISOString().split('T')[0];\n  }\n  /**\n   * Calculates the difference in minutes between the given timestamp and the current time.\n   *\n   * @param timestamp - The timestamp in ISO format (e.g., '2025-02-15T13:27:49.6221724Z').\n   * @returns The difference in minutes as a number.\n   */\n  public static getSecondsFromNow(timestamp: string): number {\n    const givenTime = moment.utc(timestamp);\n    const now = moment.utc();\n    return now.diff(givenTime, 'seconds');\n  }\n  /**\n   * Returns the current date as a Date object.\n   *\n   * @returns The current date.\n   */\n  public static today(): Date {\n    return moment().toDate();\n  }\n  /**\n   * Returns yesterday's date as a Date object.\n   *\n   * @returns The date of yesterday.\n   */\n  public static yesterday(): Date {\n    return moment().subtract(1, 'day').startOf('day').toDate();\n  }\n  /**\n   * Converts a given UTC timestamp to local time.\n   *\n   * @param timestamp - The UTC timestamp to convert.\n   * @returns The local time as a Moment object.\n   */\n  public static toLocalTime(timestamp: string | number | Date): moment.Moment {\n    return moment.utc(timestamp).local();\n  }\n}\n","/*\n * Public API Surface of helpers\n */\n\nexport * from './lib/date-time.helper';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":";;MACa,cAAc,CAAA;AACzB;;;;;;AAMG;IACI,OAAO,YAAY,CAAC,IAAS,EAAA;QAClC,OAAO,IAAI,IAAI,CAAC,MAAM,CAAC,IAAI,CAAC,CAAC,GAAG,EAAE,CAAC,MAAM,EAAE,CAAC,CAAC,WAAW,EAAE,CAAC,KAAK,CAAC,GAAG,CAAC,CAAC,CAAC,CAAC;IAC1E;AACA;;;;;AAKG;IACI,OAAO,iBAAiB,CAAC,SAAiB,EAAA;QAC/C,MAAM,SAAS,GAAG,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC;AACvC,QAAA,MAAM,GAAG,GAAG,MAAM,CAAC,GAAG,EAAE;QACxB,OAAO,GAAG,CAAC,IAAI,CAAC,SAAS,EAAE,SAAS,CAAC;IACvC;AACA;;;;AAIG;AACI,IAAA,OAAO,KAAK,GAAA;AACjB,QAAA,OAAO,MAAM,EAAE,CAAC,MAAM,EAAE;IAC1B;AACA;;;;AAIG;AACI,IAAA,OAAO,SAAS,GAAA;AACrB,QAAA,OAAO,MAAM,EAAE,CAAC,QAAQ,CAAC,CAAC,EAAE,KAAK,CAAC,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,MAAM,EAAE;IAC5D;AACA;;;;;AAKG;IACI,OAAO,WAAW,CAAC,SAAiC,EAAA;QACzD,OAAO,MAAM,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC,KAAK,EAAE;IACtC;AACD;;AChDD;;AAEG;;ACFH;;AAEG;;;;"}