{"version":3,"file":"core-base.mjs","sources":["../../../../projects/core/base/src/lib/mapper/property.mapper.ts","../../../../projects/core/base/src/lib/mapper/response.mapper.ts","../../../../projects/core/base/src/lib/mapper/request.mapper.ts","../../../../projects/core/base/src/lib/interface.base.repository.ts","../../../../projects/core/base/src/lib/interface.readable.repository.ts","../../../../projects/core/base/src/lib/interface.writeable.repository.ts","../../../../projects/core/base/src/lib/bo.base.ts","../../../../projects/core/base/src/lib/paging.base.response.ts","../../../../projects/core/base/src/lib/paging.base.request.ts","../../../../projects/core/base/src/public-api.ts","../../../../projects/core/base/src/core-base.ts"],"sourcesContent":["/**\n * Mapping the property\n * @param sourceProperty -> source property\n * @param type -> type of class (use for Object class, no need you for primitive types)\n */\nexport function propertyMapper(sourceProperty: string, type?: any) {\n  return function (target: any, propertyKey: string) {\n    if (!target.constructor._propertyMap) {\n      target.constructor._propertyMap = {};\n    }\n    target.constructor._propertyMap[propertyKey] = sourceProperty;\n    if (!target.constructor._typeList) {\n      target.constructor._typeList = {};\n    }\n    target.constructor._typeList[propertyKey] = type;\n  };\n}\n","/**\n * Response mapper\n */\nexport class ResponseMapper<T> {\n  _propertyMapping: any;\n  _typeList: any;\n  _target: any;\n\n  constructor(type: { new (): T }) {\n    this._target = new type();\n    this._propertyMapping = this._target.constructor._propertyMap;\n    this._typeList = this._target.constructor._typeList;\n  }\n\n  findValueByKey(obj: any, key: any) {\n    let result: any;\n    for (let property in obj) {\n      if (obj.hasOwnProperty(property)) {\n        // If not null and match key return value\n        if (property === key && obj[key] !== null) {\n          return obj[key];\n        }\n      }\n    }\n    // Default return undefined\n    return result;\n  }\n\n  map(source: any) {\n    Object.keys(this._target).forEach((key) => {\n      const mappedKey =\n        this._propertyMapping !== undefined\n          ? this._propertyMapping[key]\n          : undefined;\n      if (mappedKey) {\n        this._target[key] = this.findValueByKey(source, mappedKey);\n      } else {\n        this._target[key] = this.findValueByKey(source, key);\n      }\n      if (typeof this._target[key] === 'object') {\n        // If value is array callback each element\n        if (Array.isArray(this._target[key])) {\n          /**\n           * Check condition is array.\n           * if it is array to check element of array is object or not\n           * if element is object, map element in array\n           */\n          if (typeof this._target[key][0] === 'object') {\n            this._target[key] = this._target[key].map((item: any) =>\n              new ResponseMapper(this._typeList[key]).map(item)\n            );\n          }\n        } else {\n          // If value is object only callback\n          this._target[key] = new ResponseMapper(this._typeList[key]).map(\n            this._target[key]\n          );\n        }\n      }\n    });\n    return this._target;\n  }\n}\n","/**\n * Request mapper\n */\nexport class RequestMapper<T> {\n  _propertyMapping: any;\n  _typeList: any;\n  _target: any;\n\n  constructor(type: { new (): T }) {\n    this._target = new type();\n    this._propertyMapping = this._target.constructor._propertyMap;\n    this._typeList = this._target.constructor._typeList;\n  }\n\n  map(source: any): any {\n    if (!this._propertyMapping) {\n      throw new Error('No properties have been mapped.');\n    }\n\n    const requestBody: any = {};\n    for (const propertyKey in this._propertyMapping) {\n      if (source.hasOwnProperty(propertyKey)) {\n        const snakeCaseKey = this._propertyMapping[propertyKey];\n        let value = source[propertyKey];\n\n        if (typeof value === 'object' && value !== null) {\n          if (Array.isArray(value)) {\n            if (this._typeList && this._typeList[propertyKey]) {\n              value = value.map((item) =>\n                new RequestMapper(this._typeList[propertyKey]).map(item)\n              );\n            }\n          } else {\n            if (this._typeList && this._typeList[propertyKey]) {\n              value = new RequestMapper(this._typeList[propertyKey]).map(value);\n            }\n          }\n        }\n\n        requestBody[snakeCaseKey] = value;\n      }\n    }\n    return requestBody;\n  }\n}\n","import { InjectionToken } from '@angular/core';\nimport { IReadableRepository } from './interface.readable.repository';\nimport { IWriteableRepository } from './interface.writeable.repository';\n\n/**\n * Define Repository which combine all actions\n * Readable  -> Read Repository\n * Writeable -> Write Repository\n */\nexport interface IBaseRepository\n  extends IReadableRepository,\n    IWriteableRepository {}\n\nexport const BASE_REPOSITORY = new InjectionToken<IBaseRepository>(\n  'BASE_REPOSITORY'\n);\n","import { InjectionToken } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nexport interface IReadableRepository {\n  findById<T>(endPoint: string, id: string): Observable<T>;\n  findAll<T>(endPoint: string): Observable<T>;\n  findInAll<T>(endPoint: string, body: T, options?: {}): Observable<T>;\n}\n\nexport const READABLE_REPOSITORY = new InjectionToken<IReadableRepository>(\n  'READABLE_REPOSITORY'\n);\n","import { InjectionToken } from '@angular/core';\nimport { Observable } from 'rxjs';\n\nexport interface IWriteableRepository {\n  add<T>(endPoint: string, body: T): Observable<T>;\n  update<T>(endPoint: string, body: T): Observable<T>;\n  delete<T>(endPoint: string): void;\n}\n\nexport const WRITEABLE_REPOSITORY = new InjectionToken<IWriteableRepository>(\n  'WriteableRepository'\n);\n","export class BOBase {}\n","import { BOBase } from './bo.base';\nimport { propertyMapper } from './mapper';\n\n/**\n * Defines Paging BO Base\n */\nexport class PagingBaseResponse {\n  @propertyMapper('activePage', Number)\n  activePage: number = 0;\n\n  @propertyMapper('totalPages', Number)\n  totalPages: number = 0;\n\n  @propertyMapper('totalItems', Number)\n  totalItems: number = 0;\n\n  @propertyMapper('pageSize', Number)\n  pageSize: number = 0;\n\n  constructor(init: Partial<PagingBaseResponse> = {}) {\n    Object.assign(this, init);\n  }\n}\n","import { propertyMapper } from './mapper';\n\nexport class PagingBaseRequest {\n  @propertyMapper('Page', Number)\n  page: number = 1;\n\n  @propertyMapper('PageSize', Number)\n  pageSize: number = 16;\n\n  @propertyMapper('Sort', String)\n  sort: string = '';\n\n  @propertyMapper('Filters', String)\n  filters: string = '';\n\n  constructor(init: Partial<PagingBaseRequest> = {}) {\n    Object.assign(this, init);\n  }\n}\n","/*\n * Public API Surface of base\n */\n\nexport * from './lib/mapper';\nexport * from './lib/interface.base.repository';\nexport * from './lib/interface.readable.repository';\nexport * from './lib/interface.writeable.repository';\nexport * from './lib/bo.base';\nexport * from './lib/paging.base.response';\nexport * from './lib/paging.base.request';\n","/**\n * Generated bundle index. Do not edit.\n */\n\nexport * from './public-api';\n"],"names":[],"mappings":"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"}